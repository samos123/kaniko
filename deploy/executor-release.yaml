steps:
  # First, install make
  - name: "gcr.io/google-appengine/debian9"
    args: ["sh", "-c", "apt-get update && apt-get install -y make"]
    volumes:
    - name: "make"
      path: "/usr/bin"
  - name: "gcr.io/google-appengine/debian9"
    args: ["sh", "-c", "cp -r . /kaniko/ && mkdir -p /workspace/go/src/github.com/GoogleContainerTools/ && cp -r /kaniko/ /workspace/go/src/github.com/GoogleContainerTools/"]
    volumes:
    - name: "make"
      path: "/usr/bin"
  # Then, build the binary
  - name: "gcr.io/google-appengine/golang"
    args: ["sh", "-c", "make"]
    volumes:
    - name: "make"
      path: "/usr/bin"
    dir: go/src/github.com/GoogleContainerTools/kaniko
    env: ["GOPATH=/workspace/go/"]
  # First, build kaniko
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-f", "deploy/Dockerfile",
           "-t", "gcr.io/kaniko-project/executor:${COMMIT_SHA}", "."]
    dir: go/src/github.com/GoogleContainerTools/kaniko  
  # Then, build kaniko:debug
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-f", "deploy/Dockerfile_debug",
           "-t", "gcr.io/kaniko-project/executor:debug-${COMMIT_SHA}", "."] 
    dir: go/src/github.com/GoogleContainerTools/kaniko
images: ["gcr.io/kaniko-project/executor:${COMMIT_SHA}", "gcr.io/kaniko-project/executor:debug-${COMMIT_SHA}"]
